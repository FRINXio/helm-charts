name: Lint and Test Frinx-machine

on:
  workflow_dispatch:
    inputs:
      e2e_branch:
        description: 'E2E test branch'     
        required: true
        default: 'main'

jobs:
  latest-test-frinx-machine-chart:
    runs-on: ubuntu-latest
    steps:
      - name: slack - GitHub Actions Slack integration
        uses: act10ns/slack@v1.6.0
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          status: starting
          channel: '#helm_charts'
          message: "Latest E2E tests:\nbranch: ${{ github.event.inputs.e2e_branch }}"

      - name: 'Set build id'
        id: build_id
        # add a step output `steps.build_id.outputs.id` as the unique id
        run: echo "::set-output name=id::$(date +%s)"

      - name: Test id
        run: |
          echo "${{ steps.build_id.outputs.id }}"

      - name: Helm tool installer
        uses: Azure/setup-helm@v3.3
        with:
          version: v3.8.1

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create AKS cluster
        run: |
          az aks create --resource-group github-e2e-tests --name aks-e2e-tests --node-count 1 --node-vm-size standard_e4as_v4 --generate-ssh-keys

      - uses: azure/aks-set-context@v3
        with:
           resource-group: 'github-e2e-tests'
           cluster-name: 'aks-e2e-tests'
      
      - name: Install testkube plugin
        run: |
          wget -qO - https://repo.testkube.io/key.pub | sudo apt-key add -
          echo "deb https://repo.testkube.io/linux linux main" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y testkube

      - name: Install cert-manager helm-chart
        run: |
          kubectl create namespace cert-manager
          kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.9.1/cert-manager.crds.yaml
          helm repo add jetstack https://charts.jetstack.io
          helm install my-release --namespace cert-manager --version v1.9.1 jetstack/cert-manager

      - name: Install testkube
        id: install_testkube
        run: |
          helm repo add testkube https://kubeshop.github.io/helm-charts
          helm install --create-namespace --namespace testkube --version 1.4.5 testkube testkube/testkube --wait

      - name: Install helm-chart for e2e tests
        run: |
          helm dependency update charts/frinx-machine
          helm install frinx-dev charts/frinx-machine \
             -n frinx-e2e --create-namespace --wait --timeout 20m0s \
             --set demo-workflows.enabled=true \
             --set krakend.image.tag=latest \
             --set frinx-frontend.image.tag=latest \
             --set resource-manager.image.tag=latest \
             --set workflow-manager.image.tag=latest \
             --set workflow-manager.proxyImage.tag=latest \
             --set workflow-manager.schellarImage.tag=latest \
             --set inventory.image.tag=latest \
             --set topology-discovery.image.tag=latest \
             --set uniconfig.image.tag=latest \
             --set demo-workflows.image.tag=latest \
             --set demo-workflows.sample-topology.image.tag=latest

      - name: Create test
        id: create_test
        run: |
          kubectl testkube create test --git-uri https://github.com/FRINXio/frinx-machine-e2e-tests.git --git-branch ${{ github.event.inputs.e2e_branch }} --name frinx-e2e-latest-${{ steps.build_id.outputs.id }} --type cypress/project

      - name: Run test
        id: run_test
        run: |
          kubectl testkube run test frinx-e2e-${{ steps.build_id.outputs.id }} -f

      - name: slack - GitHub Actions Slack notification
        uses: act10ns/slack@v1.6.0
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          status: ${{ job.status }}
          channel: '#helm-charts'
          message: "E2E tests with latest images: ${{ job.status }} - branch: ${{ github.event.inputs.e2e_branch }} - test-id: ${{ steps.build_id.outputs.id }}"

      - name: Delete AKS cluster
        if: ${{ always() }}
        run: |
          az aks delete --resource-group github-e2e-tests --name aks-e2e-tests --yes
