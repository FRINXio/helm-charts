name: Lint and Test Frinx-machine

on:
  pull_request:
    paths:
      - 'charts/frinx-machine/**'

jobs:
  lint-test-frinx-machine-chart:
    runs-on: ubuntu-22.04
    timeout-minutes: 50
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: ahmadnassri/action-workflow-queue@v1

      - name: Helm tool installer
        uses: Azure/setup-helm@v3.3
        with:
          version: v3.8.1

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.3.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config .github/frinx-machine_lint_test_config.yaml)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        run: ct lint --config .github/frinx-machine_lint_test_config.yaml

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create AKS cluster
        run: |
          az aks create --resource-group github-e2e-tests --name aks-e2e-tests --node-count 1 --node-vm-size standard_e4as_v4 --generate-ssh-keys

      - uses: azure/aks-set-context@v3
        with:
           resource-group: 'github-e2e-tests'
           cluster-name: 'aks-e2e-tests'

      - name: Create namespace
        run: |
          kubectl create ns frinx-machine 
          kubectl create ns frinx-machine-ct 

      - name: Set imagePullSecret
        uses: azure/k8s-create-secret@v4
        with:
          namespace: 'frinx-machine-ct'
          secret-name: 'regcred'
          container-registry-url: 'https://index.docker.io/v1/'
          container-registry-username: ${{ secrets.DOCKERHUB_NAME }}
          container-registry-password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Run chart-testing (install)
        run: ct install --config .github/frinx-machine_lint_test_config.yaml --namespace frinx-machine-ct

      - name: Install testkube plugin
        run: |
          wget -qO - https://repo.testkube.io/key.pub | sudo apt-key add -
          echo "deb https://repo.testkube.io/linux linux main" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y testkube

      - name: Install cert-manager helm-chart
        run: |
          kubectl create namespace cert-manager
          kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.9.1/cert-manager.crds.yaml
          helm repo add jetstack https://charts.jetstack.io
          helm install cert-manager --namespace cert-manager --version v1.9.1 jetstack/cert-manager

      # Install testkube
      - name: Install testkube
        id: install_testkube
        run: |
          helm repo add testkube https://kubeshop.github.io/helm-charts
          helm install --create-namespace --namespace testkube --version 1.9.33 testkube testkube/testkube --wait

      - name: Set imagePullSecret
        uses: azure/k8s-create-secret@v4
        with:
          namespace: 'frinx-machine'
          secret-name: 'regcred'
          container-registry-url: 'https://index.docker.io/v1/'
          container-registry-username: ${{ secrets.DOCKERHUB_NAME }}
          container-registry-password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Install helm-chart for e2e tests
        run: |
          helm dependency update charts/frinx-machine
          helm install frinx-dev charts/frinx-machine --set demo-workflows.enabled=true -n frinx-machine --wait --timeout 20m0s

      # Creating e2e tests
      - name: Create test
        id: create_test
        run: |
          kubectl apply -f cypress-v11-executor.yaml
          sleep 120
          kubectl testkube create test --git-uri https://github.com/FRINXio/frinx-machine-e2e-tests.git --git-branch refactortogetridofexplicitwait --name frinx-machine --type cypress:v11/test

      # Running e2e tests
      - name: Run test
        id: run_test
        run: |
          kubectl testkube run test frinx-machine -f

      - name: Download artifacts
        if: ${{ failure() }}
        id: download_artifacts
        shell: bash
        run: |
          EXECUTION_ID=$(kubectl testkube get executions | sed -n '4p' | cut -d " " -f3)
          echo $EXECUTION_ID
          kubectl testkube download artifacts $EXECUTION_ID
          zip -r artifacts.zip artifacts/

      - name: Download variables from merge workflow
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3.1.1
        with:
          name: ${{ github.workflow }}_artifacts.zip
          path: ${{ github.workspace }}/artifacts.zip
          if-no-files-found: error
          retention-days: 1

      - name: Delete AKS cluster
        if: ${{ always() }}
        run: |
          az aks delete --resource-group github-e2e-tests --name aks-e2e-tests --yes

      - name: slack - GitHub Actions Slack integration
        if: ${{ always() }}
        uses: act10ns/slack@v1.6.0
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK }}
          status: ${{ job.status }}
          channel: '#fx_env_helm-charts'
          message: "E2E tests: ${{ job.status }}\n${{ github.event.pull_request.title }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
