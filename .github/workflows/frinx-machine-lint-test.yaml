name: Lint and Test Frinx-machine

on:
  pull_request:
    paths:
      - 'charts/frinx-machine/**'

jobs:
  lint-test-frinx-machine-chart:
    runs-on: ubuntu-22.04
    timeout-minutes: 50
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: ahmadnassri/action-workflow-queue@v1

      - name: Helm tool installer
        uses: Azure/setup-helm@v3
        with:
          version: v3.9.0

      - uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0

      - name: Run chart-testing (lint)
        run: ct lint --config .github/frinx-machine_lint_test_config.yaml

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create AKS cluster
        id: create_aks_cluster
        run: |
          az aks create --resource-group github-e2e-tests --name aks-e2e-tests --node-count 1 --node-vm-size standard_b4ms --generate-ssh-keys > /dev/null

      - uses: azure/aks-set-context@v3
        with:
           resource-group: 'github-e2e-tests'
           cluster-name: 'aks-e2e-tests'

      - name: Create namespace
        run: |
          kubectl create ns frinx-machine

      - name: Set imagePullSecret
        uses: azure/k8s-create-secret@v4
        with:
          namespace: 'frinx-machine'
          secret-name: 'regcred'
          container-registry-url: 'https://index.docker.io/v1/'
          container-registry-username: ${{ secrets.DOCKERHUB_NAME }}
          container-registry-password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Run chart-testing (install)
        run: ct install --config .github/frinx-machine_lint_test_config.yaml --namespace frinx-machine --skip-clean-up

      - name: Prepare helm-chart for e2e tests
        run: |
          NAME=$(helm list --namespace frinx-machine | sed -n '2p' | cut -d$'\t' -f1)
          helm dependency update charts/frinx-machine
          helm upgrade $NAME charts/frinx-machine --set demo-workflows.enabled=true -n frinx-machine --wait --timeout 20m0s

      - name: Port-forward UI
        # id: port_forward
        run: |
          ls ~/
          wget https://github.com/txn2/kubefwd/releases/download/1.22.5/kubefwd_Linux_x86_64.tar.gz
          tar xzf kubefwd_Linux_x86_64.tar.gz
          sudo cp kubefwd /usr/local/bin/kubefwd
          sudo chmod a+x /usr/local/bin/kubefwd
          sudo -E kubefwd svc -n frinx-machine -f metadata.name=krakend 2>&1 | tee /home/runner/work/_temp/k8s-pod-forward.log &

      # - name: Port-forward UI
      #   # id: port_forward
      #   run: |
      #     .github/script.sh 2>&1 | tee /home/runner/work/_temp/k8s-pod-forward.log &

      # - name: Setup Kubernetes port-forward daemon
      #   uses: vbem/k8s-port-forward@v1
      #   with:
      #     workload: 'svc/krakend'
      #     mappings: '8080:8080'
      #     options: '--address=0.0.0.0 --namespace=frinx-machine'

      - name: Clone frinx-machine-e2e-tests
        uses: actions/checkout@v3
        with:
          repository: FRINXio/frinx-machine-e2e-tests
          ref: unify_test
          token: ${{ secrets.TOKEN }}
          path: './cypress'

      - name: Cypress tests
        id: run_test
        uses: cypress-io/github-action@v5
        with:
          spec: cypress/e2e/0-check-main-page/*,cypress/e2e/2-devices/*,cypress/e2e/3-workflow-builder/*,cypress/e2e/4-workflow-manager/*
          working-directory: ./cypress
        env:
          CYPRESS_host: http://krakend:8080

      - name: Show port-forward log
        if: failure()
        id: port_forward_log
        run: |
          cat /home/runner/work/_temp/k8s-pod-forward*

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: ./cypress/cypress/screenshots

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos
          path: ./cypress/cypress/videos

      - name: Delete AKS cluster
        if: ${{ ( success() || failure() || cancelled() ) &&  ( steps.create_aks_cluster.outcome != 'skipped' ) }}
        run: |
          az aks delete --resource-group github-e2e-tests --name aks-e2e-tests --yes

      - name: slack - GitHub Actions Slack integration
        if: ${{ always() }}
        uses: act10ns/slack@v2.0.0
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK }}
          status: ${{ job.status }}
          channel: '#fx_env_helm-charts'
          message: "E2E tests: ${{ job.status }}\n${{ github.event.pull_request.title }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\nJob: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          steps: ${{ toJson(steps) }}
