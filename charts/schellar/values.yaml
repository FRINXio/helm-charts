# Default values for schellar.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Schellar depends on mongo DB. Here's a chart for mongo:
# https://github.com/bitnami/charts/tree/master/bitnami/mongodb

# helm install schellar services/workflows/schellar/pkg/schellar

replicaCount: 1

image:
  name: frinx/uniflow-schellar
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

env:
  LOG_LEVEL: debug
  CHECK_INTERVAL_SECONDS: 10
  CONDUCTOR_API_URL: http://conductor:8080/api
  BACKEND: postgres
  POSTGRES_MIGRATIONS_DIR: migrations
  POSTGRES_PORT: 5432

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

team:
  cluster: workflows-psql-cluster
