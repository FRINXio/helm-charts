apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "swagger-ui.fullname" . }}
  labels:
    {{- include "swagger-ui.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "swagger-ui.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        checksum/configma-filter: {{ include (print $.Template.BasePath "/configmap-deployment.yaml") . | sha256sum }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "swagger-ui.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "swagger-ui.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      {{- if .Values.manageApiDocs }}
      {{- range $key, $value := .Values.manageApiDocs }}
      {{- if $value.enabled }}
      - name: "{{ $key }}-fetch"
        image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
        imagePullPolicy: {{ $.Values.image.pullPolicy }}
        volumeMounts:
          - name: api-files-volume
            mountPath: "/tmp"
            readOnly: false
        command: ["/bin/sh","-c"]
        args:
          - |
            until curl -s -o /dev/null -w "%{http_code}" {{ $value.fetch.url }} | grep -q "200"; do
              echo "Waiting for server to be up..."
              sleep 5
            done
            wget --no-check-certificate {{ $value.fetch.url }} -O /tmp/{{ $value.fetch.file }}
      {{- if $value.formatConfigMap }}
      - name: "{{ $key }}-format"
        image: "{{ $.Values.utilitiesImage.repository }}:{{ $.Values.utilitiesImage.tag }}"
        imagePullPolicy: {{ $.Values.utilitiesImage.pullPolicy }}
        volumeMounts:
          - name: api-formatter-volume
            mountPath: "/app"
            readOnly: false
          - name: api-files-volume
            mountPath: "/tmp"
            readOnly: false
          - name: {{ $value.formatConfigMap }}
            mountPath: "/app/filter"
        command: ["/bin/sh","-c", "python3 /app/formatter.py /tmp/{{ $value.fetch.file }} /tmp/{{ $value.fetch.file }} /app/filter/config.yaml"]
      {{- end }}
      {{- end }}
      {{- end }}
      {{- end }}
      {{- if .Values.initContainers }}
      {{- range $key, $value := .Values.initContainers }}
      - name: "{{ $key }}"
      {{ toYaml $value | indent 8 }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- range $key, $val := .Values.env }}
            - name: {{ $key | quote }}
              value: {{ $val | quote }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: api-files-volume
              mountPath: "/usr/share/nginx/html/api"
              readOnly: false
      volumes:
        - name: api-files-volume
          emptyDir: {}
        - name: api-formatter-volume
          configMap:
            name: {{ template "swagger-ui.fullname" . }}-formatter
        {{- range $key, $val := .Values.extraConfigMaps }}
        - name: {{ $key }}
          configMap:
            name: {{ template "swagger-ui.fullname" $ }}-{{ $key }}
        {{- end }}
      {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
