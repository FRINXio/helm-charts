# Global settings

x-device-discovery-enabled: &device-discovery-enabled false

# Default values for FRINX-machine.

krakend:
  enabled: true
  fullnameOverride: "krakend"
  image:
    repository: "frinx/krakend"
    tag: "1.0.6"

frinx-frontend:
  enabled: true
  fullnameOverride: "frinx-frontend"
  image:
    repository: "frinx/frinx-frontend"
    tag: "1.0.45"
  env:
    AUTH_CLIENT_ID: "frinx"
    DEVICE_TOPOLOGY_ENABLED: true

postgresql:
  enabled: true
  fullnameOverride: "frinx-postgresql"
  auth:
    enablePostgresUser: true
    username: postgresU
    password: postgresP
    database: postgres
  architecture: standalone
  primary:
    initdb:
      scripts:
        init_db.sql: |
          CREATE DATABASE schellar;
          CREATE DATABASE conductor;
          CREATE DATABASE inventory;

resource-manager:
  enabled: true
  fullnameOverride: "resource-manager"
  image:
    repository: "frinx/resource-manager"
    tag: "1.0.9"
  postgresql:
    enabled: false
  env:
    PSQL_HOSTNAME: frinx-postgresql
    RM_DB_CONNECTION_STRING: "postgres://postgresU:postgresP@frinx-postgresql:5432/postgres?sslmode=disable"

workflow-manager:
  enabled: true
  fullnameOverride: "workflow-proxy"
  image:
    repository: "frinx/conductor-server"
    tag: "2.2.0"
  proxyImage:
    repository: "frinx/workflow-proxy"
    tag: "2.1.5"
  schellarImage:
    repository: "frinx/schellar"
    tag: "3.0.0"
  postgresql:
    enabled: false
  conductorEnv:
    SPRING_DATASOURCE_HOSTNAME: frinx-postgresql
    CONDUCTOR_EXTERNALPAYLOADSTORAGE_POSTGRES_HOSTNAME: frinx-postgresql
    SPRING_SEARCHDATASOURCE_HOSTNAME: frinx-postgresql
  schellarEnv:
    POSTGRES_DATABASE_URL: "host=frinx-postgresql port=5432 user=postgresU password=postgresP database=schellar"

inventory:
  enabled: true
  fullnameOverride: "inventory"
  image:
    repository: "frinx/frinx-inventory-server"
    tag: "1.9.2"
  postgresql:
    enabled: false
  env:
    POSTGRES_HOSTNAME: frinx-postgresql
    TOPOLOGY_ENABLED: *device-discovery-enabled

topology-discovery:
  enabled: *device-discovery-enabled
  fullnameOverride: "topology-discovery"
  image:
    repository: "frinx/topology-discovery"
    tag: "0.0.11"

frinx-arango-config:
  enabled: *device-discovery-enabled
  arangodb_config:
    enabled: *device-discovery-enabled
    securityContext:
      readOnlyRootFilesystem: true
      runAsUser: 1000
      runAsGroup: 2000
      fsGroup: 3000

kube-arangodb:
  operator:
    replicaCount: 1
    args:
      - --deployment.feature.ephemeral-volumes=true
  rbac:
    enabled: true
    extensions:
      monitoring: false
      acs: false
      at: false

uniconfig-postgresql:
  enabled: true
  fullnameOverride: "uniconfig-postgresql"
  auth:
    enablePostgresUser: true
    username: postgresU
    password: postgresP
    database: uniconfig
  architecture: standalone

uniconfig:
  enabled: true
  image:
    repository: "frinx/uniconfig"
    tag: "5.1.9"
  imagePullSecrets:
    - name: regcred
  postgresql:
    enabled: false
  dbPersistence:
    DBPERSISTENCE_CONNECTION_DATABASELOCATIONS_0_HOST: "uniconfig-postgresql"
    DBPERSISTENCE_CONNECTION_USERNAME: "postgresU"
    DBPERSISTENCE_CONNECTION_PASSWORD: "postgresP"
  traefik:
    rbac:
      namespaced: true
  securityContext:
    capabilities:
      add:
      - NET_BIND_SERVICE
      drop:
      - ALL

demo-workflows:
  enabled: false
  fullnameOverride: "demo-workflows"
  image:
    repository: "frinx/demo-workflows"
    tag: "2.0.9"
  sample-topology:
    enabled: false

sample-topology:
  enabled: false
  fullnameOverride: "sample-topology"
  image:
    repository: "frinx/sample-topology"
    tag: "2.0.9"

grafana:
  enabled: true
  fullnameOverride: "grafana"
  adminUser: frinx
  adminPassword: frinx123!

  extraConfigmapMounts:
    - name: frinx-grafana-datasources
      mountPath: /etc/grafana/provisioning/datasources
      subPath: ""
      configMap: frinx-grafana-datasources
      readOnly: false
    - name: frinx-grafana-dashboards
      mountPath: /etc/grafana/provisioning/dashboards
      subPath: ""
      configMap: frinx-grafana-dashboards
      readOnly: false

influxdb2:
  enabled: true
  fullnameOverride: influxdb
  adminUser:
    user: "frinx"
    password: "frinx123!"
    token: "eyJrIjoiN09MSVpVZjlVRG1xNHlLNXpVbmZJOXFLWU1GOXFxNEIiLCJuIjoic3Nzc3MiLCJpZCI6MX0"
    organization: "frinx-machine"
    bucket: "frinx"
    retention_policy: "2d"
  env:
    - name: DOCKER_INFLUXDB_INIT_MODE
      value: setup

telegraf-ds:
  enabled: true
  fullnameOverride: telegraf-ds
  env:
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: HOSTNAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName

  config:
    docker_endpoint: ""

  override_config:
    toml: |
      [agent]
        collection_jitter = "0s"
        debug = false
        flush_interval = "10s"
        flush_jitter = "0s"
        hostname = "$HOSTNAME"
        interval = "10s"
        logfile = ""
        metric_batch_size = 1000
        metric_buffer_limit = 10000
        omit_hostname = false
        precision = ""
        quiet = false
        round_interval = true

      [[outputs.influxdb_v2]]
        bucket = "frinx"
        organization = "frinx-machine"
        token = "eyJrIjoiN09MSVpVZjlVRG1xNHlLNXpVbmZJOXFLWU1GOXFxNEIiLCJuIjoic3Nzc3MiLCJpZCI6MX0"
        urls = ["http://influxdb"]

      [[outputs.health]]
        service_address = "http://:8080"

      [[inputs.diskio]]
      [[inputs.kernel]]
      [[inputs.mem]]
      [[inputs.net]]
      [[inputs.processes]]
      [[inputs.swap]]
      [[inputs.system]]

      [[inputs.cpu]]
        percpu = true
        totalcpu = true
        collect_cpu_time = false
        report_active = false

      [[inputs.disk]]
        ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

      [[inputs.kubernetes]]
        url = "https://$HOSTIP:10250"
        bearer_token = "/var/run/secrets/kubernetes.io/serviceaccount/token"
        insecure_skip_verify = true
        [inputs.kubernetes.tagpass]
          namespace = [ "${NAMESPACE}" ]

loki:
  enabled: true
  fullnameOverride: loki
  config:
    chunk_store_config:
      max_look_back_period: 24h
    table_manager:
      retention_deletes_enabled: true
      retention_period: 24h

promtail:
  fullnameOverride: promtail
  config:
    clients:
      - url: http://loki:3100/loki/api/v1/push
    snippets:
      pipelineStages:
        - cri: {}
      scrapeConfigs: |
        - job_name: kubernetes-pods
          pipeline_stages:
            {{- toYaml .Values.config.snippets.pipelineStages | nindent 4 }}
          kubernetes_sd_configs:
            - role: pod
              namespaces:
                names:
                  - {{ .Release.Namespace }}
          relabel_configs:
            - source_labels:
                - __meta_kubernetes_pod_controller_name
              regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
              action: replace
              target_label: __tmp_controller_name
            - source_labels:
                - __meta_kubernetes_pod_label_app_kubernetes_io_name
                - __meta_kubernetes_pod_label_app
                - __tmp_controller_name
                - __meta_kubernetes_pod_name
              regex: ^;*([^;]+)(;.*)?$
              action: replace
              target_label: app
            - source_labels:
                - __meta_kubernetes_pod_label_app_kubernetes_io_instance
                - __meta_kubernetes_pod_label_release
              regex: ^;*([^;]+)(;.*)?$
              action: replace
              target_label: instance
            - source_labels:
                - __meta_kubernetes_pod_label_app_kubernetes_io_component
                - __meta_kubernetes_pod_label_component
              regex: ^;*([^;]+)(;.*)?$
              action: replace
              target_label: component
            {{- if .Values.config.snippets.addScrapeJobLabel }}
            - replacement: kubernetes-pods
              target_label: scrape_job
            {{- end }}
            {{- toYaml .Values.config.snippets.common | nindent 4 }}
            {{- with .Values.config.snippets.extraRelabelConfigs }}
            {{- toYaml . | nindent 4 }}
            {{- end }}
