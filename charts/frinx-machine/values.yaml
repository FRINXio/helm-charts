# Default values for FRINX-machine.

krakend:
  enabled: true
  fullnameOverride: "krakend"

frinx-frontend:
  enabled: true
  fullnameOverride: "frinx-frontend"

postgresql:
  enabled: true
  fullnameOverride: "frinx-postgresql"
  auth:
    enablePostgresUser: true
    username: postgresU
    password: postgresP
    database: uniresource
  architecture: standalone
  primary:
    initdb:
      scripts:
        init_db.sql: |
          CREATE DATABASE schellar;
          CREATE DATABASE conductor;
          CREATE DATABASE inventory;

uniresource:
  enabled: true
  fullnameOverride: "uniresource"
  postgresql:
    enabled: false
  env:
    PSQL_HOSTNAME: frinx-postgresql
    RM_DB_CONNECTION_STRING: "postgres://postgresU:postgresP@frinx-postgresql:5432/uniresource?sslmode=disable"

uniflow:
  enabled: true
  fullnameOverride: "workflow-proxy"
  postgresql:
    enabled: false
  env:
    SPRING_DATASOURCE_HOSTNAME: frinx-postgresql
    SPRING_DATASOURCE_URL: jdbc:postgresql://frinx-postgresql:5432/conductor?charset=utf8&parseTime=true&interpolateParams=true
    CONDUCTOR_EXTERNAL_PAYLOAD_STORAGE_POSTGRES_URL: jdbc:postgresql://frinx-postgresql:5432/conductor?charset=utf8&parseTime=true&interpolateParams=true
  schellarEnv:
    POSTGRES_DATABASE_URL: "host=frinx-postgresql port=5432 user=postgresU password=postgresP database=schellar"

inventory:
  enabled: true
  fullnameOverride: "inventory"
  postgresql:
    enabled: false
  env:
    POSTGRES_HOSTNAME: frinx-postgresql

uniconfig-postgresql:
  enabled: true
  fullnameOverride: "uniconfig-postgresql"
  auth:
    enablePostgresUser: true
    username: postgresU
    password: postgresP
    database: uniconfig
  architecture: standalone

uniconfig:
  enabled: true
  fullnameOverride: "uniconfig"
  postgresql:
    enabled: false
  dbPersistence:
    connection_databaseLocations_host: "uniconfig-postgresql"
    connection_dbName: "uniconfig"
    connection_username: "postgresU"
    connection_password: "postgresP"

demo-workflows:
  enabled: false
  fullnameOverride: "demo-workflows"
  sample-topology:
    fullnameOverride: "sample-topology"

grafana:
  enabled: true
  fullnameOverride: "grafana"
  admin:
    ## @param admin.user Grafana admin username
    ##
    user: "frinx"
    ## @param admin.password Admin password. If a password is not provided a random password will be generated
    ##
    password: "frinx123!"
    ## @param admin.existingSecret Name of the existing secret containing admin password

  grafana:
    extraVolumes:
      - name: grafana-datasources
        configMap: 
          defaultMode: 420
          name: grafana-datasources
      - name: grafana-dashboards
        configMap: 
          name: grafana-dashboards
          
    extraVolumeMounts:
      - name: grafana-datasources
        mountPath: /etc/grafana/provisioning/datasources
        readOnly: false
      - name: grafana-dashboards
        mountPath: /etc/grafana/provisioning/dashboards
        readOnly: false

influxdb2:
  enabled: true
  fullnameOverride: influxdb
  adminUser:
    ## @param auth.admin.username InfluxDB&trade; admin user name
    ##
    user: "frinx"
    ## @param auth.admin.password InfluxDB&trade; admin user's password
    ##
    password: "frinx123!"
    ## @param auth.admin.token InfluxDB&trade; admin user's token. Only valid with InfluxDB&trade; v2
    ##
    token: "eyJrIjoiN09MSVpVZjlVRG1xNHlLNXpVbmZJOXFLWU1GOXFxNEIiLCJuIjoic3Nzc3MiLCJpZCI6MX0"
    ## @param auth.admin.org InfluxDB&trade; admin user's org. Only valid with InfluxDB&trade; v2
    ##
    organization: "frinx-machine"
    ## @param auth.admin.bucket InfluxDB&trade; admin user's bucket. Only valid with InfluxDB&trade; v2
    ##
    bucket: "frinx"

    retention_policy: "2d"

  env:
    - name: DOCKER_INFLUXDB_INIT_MODE
      value: setup

telegraf-ds:
  enabled: true
  fullnameOverride: telegraf-ds
  env:
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: HOSTNAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName

  config:
      docker_endpoint: ""

  override_config:
    toml: |
      [agent]
        collection_jitter = "0s"
        debug = false
        flush_interval = "10s"
        flush_jitter = "0s"
        hostname = "$HOSTNAME"
        interval = "10s"
        logfile = ""
        metric_batch_size = 1000
        metric_buffer_limit = 10000
        omit_hostname = false
        precision = ""
        quiet = false
        round_interval = true

      [[outputs.influxdb_v2]]
        bucket = "frinx"
        organization = "frinx-machine"
        token = "eyJrIjoiN09MSVpVZjlVRG1xNHlLNXpVbmZJOXFLWU1GOXFxNEIiLCJuIjoic3Nzc3MiLCJpZCI6MX0"
        urls = ["http://influxdb"]

      [[outputs.health]]
        service_address = "http://:8080"
        
      [[inputs.diskio]]
      [[inputs.kernel]]
      [[inputs.mem]]
      [[inputs.net]]
      [[inputs.processes]]
      [[inputs.swap]]
      [[inputs.system]]

      [[inputs.cpu]]
        percpu = true
        totalcpu = true
        collect_cpu_time = false
        report_active = false

      [[inputs.disk]]
        ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

      [[inputs.kubernetes]]
        url = "https://$HOSTIP:10250"
        bearer_token = "/var/run/secrets/kubernetes.io/serviceaccount/token"
        insecure_skip_verify = true
        [inputs.kubernetes.tagpass]
          namespace = [ "${NAMESPACE}" ]