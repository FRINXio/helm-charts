apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "resource-manager.fullname" . }}
  labels:
    {{- include "resource-manager.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "resource-manager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "resource-manager.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "resource-manager.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      restartPolicy: Always
      initContainers:
      - name: check-db-ready
        image: postgres:alpine
        env:
          - name: POSTGRES_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ include "resource-manager.secretName" . }}
                {{- if (include "resource-manager.createSecret" .) }}
                key: POSTGRES_USERNAME
                {{- else }}
                key: {{ .Values.dbPersistence.existingSecret.postgresUsernameKey }}
                {{- end}}
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "resource-manager.secretName" . }}
                {{- if (include "resource-manager.createSecret" .) }}
                key: POSTGRES_PASSWORD
                {{- else }}
                key: {{ .Values.dbPersistence.existingSecret.postgresPasswordKey }}
                {{- end}}
            {{ if .Values.postgresql.enabled }}            
          - name: "POSTGRES_HOST"
            value: "{{ .Release.Name }}-postgresql"
            {{ else }}
          - name: "POSTGRES_HOST"  
            value: "{{ .Values.dbPersistence.POSTGRES_HOST }}"
            {{ end }}
          - name: "POSTGRES_PORT"
            value: {{ .Values.dbPersistence.POSTGRES_PORT | quote }}
        command: ['sh', '-c',
          "until pg_isready -h ${POSTGRES_HOST} -p ${POSTGRES_PORT} -U ${POSTGRES_USERNAME};
          do echo waiting for database; sleep 2; done;"]
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.env.RM_API_PORT }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.service.monitorPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz/liveness
              port: {{ .Values.service.port }}
            initialDelaySeconds: 20
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /healthz/readiness
              port: {{ .Values.service.port }}
            initialDelaySeconds: 20
            timeoutSeconds: 5
            failureThreshold: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: "RM_API_PORT"
              value: "{{ .Values.env.RM_API_PORT }}"
            - name: "RM_LOG_PATH"
              value: {{ .Values.env.RM_LOG_PATH | quote }}
            - name: "RM_LOG_LEVEL"
              value: {{ .Values.env.RM_LOG_LEVEL | quote }}
            - name: "WASMER_MAX_TIMEOUT_MILLIS"
              value: {{ .Values.env.WASMER_MAX_TIMEOUT_MILLIS | quote }}
            - name: "RM_ADMIN_ROLES"
              value: {{ .Values.rbac.RM_ADMIN_ROLES | quote }}
            - name: "RM_ADMIN_GROUPS"
              value: {{ .Values.rbac.RM_ADMIN_GROUPS | quote }}
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "resource-manager.secretName" . }}
                  {{- if (include "resource-manager.createSecret" .) }}
                  key: POSTGRES_USERNAME
                  {{- else }}
                  key: {{ .Values.dbPersistence.existingSecret.postgresUsernameKey }}
                  {{- end}}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "resource-manager.secretName" . }}
                  {{- if (include "resource-manager.createSecret" .) }}
                  key: POSTGRES_PASSWORD
                  {{- else }}
                  key: {{ .Values.dbPersistence.existingSecret.postgresPasswordKey }}
                  {{- end}}
              {{ if .Values.postgresql.enabled }}            
            - name: "POSTGRES_HOST"
              value: "{{ .Release.Name }}-postgresql"
              {{ else }}
            - name: "POSTGRES_HOST"  
              value: "{{ .Values.dbPersistence.POSTGRES_HOST }}"
              {{ end }}
            - name: "POSTGRES_PORT"
              value: {{ .Values.dbPersistence.POSTGRES_PORT | quote }}
            - name: "POSTGRES_DATABASE"
              value: {{ .Values.dbPersistence.POSTGRES_DATABASE | quote }}
            - name: "RM_DB_CONNECTION_STRING"
              value: "postgres://$(POSTGRES_USERNAME):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DATABASE)?sslmode=disable"
          {{- range $key, $val := .Values.extraEnv }}
            - name: {{ $key | quote }}
              value: {{ $val | quote }}
          {{- end }}
          volumeMounts:
          - mountPath: /var/log
            name: log-volume
      volumes:
      - name: log-volume
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
