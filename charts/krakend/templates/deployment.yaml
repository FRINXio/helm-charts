apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "krakend.fullname" . }}
  labels:
    {{- include "krakend.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "krakend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config-krakend: {{ include (print $.Template.BasePath "/configmap-krakend.yaml") . | sha256sum }}
        checksum/config-partials: {{ include (print $.Template.BasePath "/configmap-partials.yaml") . | sha256sum }}
        checksum/config-scripts: {{ include (print $.Template.BasePath "/configmap-scripts.yaml") . | sha256sum }}
        checksum/config-settings: {{ include (print $.Template.BasePath "/configmap-settings.yaml") . | sha256sum }}
        checksum/config-templates: {{ include (print $.Template.BasePath "/configmap-templates.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "krakend.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        {{ if .Values.deployment.volumes.azureFile.enabled }}
        - name: config
          azureFile:
            secretName: {{ template "krakend.fullname" . }}-azureStorage
            shareName: frinxmachine-configs/krakend
            readOnly: false
        {{ else }}
        - name: config
          configMap:
            name: {{ template "krakend.fullname" . }}-krakend
        - name: partials
          configMap:
            name: {{ template "krakend.fullname" . }}-partials
        - name: scripts
          configMap:
            name: {{ template "krakend.fullname" . }}-scripts
        - name: settings
          configMap:
            name: {{ template "krakend.fullname" . }}-settings
        - name: templates
          configMap:
            name: {{ template "krakend.fullname" . }}-templates
        {{ end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "krakend.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            {{ if .Values.deployment.volumes.azureFile.enabled }}
            - name: config
              mountPath: /etc/krakend/
            {{ else }}
            - name: config
              mountPath: /etc/krakend/
            - name: partials
              mountPath: /etc/krakend/partials/
            - name: scripts
              mountPath: /etc/krakend/scripts/
            - name: settings
              mountPath: /etc/krakend/settings/
            - name: templates
              mountPath: /etc/krakend/templates/
            {{ end }}
          env:
            - name: FC_ENABLE
              value: "1"
            - name: FC_SETTINGS
              value: "/etc/krakend/settings"
            - name: FC_PARTIALS
              value: "/etc/krakend/partials" 
            - name: FC_TEMPLATES
              value: "/etc/krakend/templates"
            - name: KRAKEND_PORT
              value: "8080"
            - name: FC_OUT
              value: "/tmp/output.json"
            - name: TLS_DISABLED
              value: {{ .Values.deployment.env.TLS_DISABLED | quote }}
            - name: KRAKEND_TLS_PROTOCOL
              value: {{ .Values.deployment.env.KRAKEND_TLS_PROTOCOL | quote }}
            - name: AUTH_ENABLED
              value: {{ .Values.deployment.env.AUTH_ENABLED | quote }}
            - name: UNICONFIG_PROTOCOL
              value: {{ .Values.deployment.env.UNICONFIG_PROTOCOL | quote }}
            - name: UNICONFIG_ZONES_LIST
              value: {{ .Values.deployment.env.UNICONFIG_ZONES_LIST | quote }}
            - name: ALLOWED_HOSTS
              value: {{ .Values.deployment.env.ALLOWED_HOSTS | quote }}
            - name: ALLOWED_ORIGINS
              value: {{ .Values.deployment.env.ALLOWED_ORIGINS | quote }}
            - name: WORKFLOW_MANAGER_ENABLED
              value: {{ .Values.deployment.env.WORKFLOW_MANAGER_ENABLED | quote }}
            - name: UNICONFIG_ENABLED
              value: {{ .Values.deployment.env.UNICONFIG_ENABLED | quote }}
            - name: L3VPN_ENABLED
              value: {{ .Values.deployment.env.L3VPN_ENABLED | quote }}
            - name: INVENTORY_ENABLED
              value: {{ .Values.deployment.env.INVENTORY_ENABLED | quote }}
            - name: RESOURCE_MANAGER_ENABLED
              value: {{ .Values.deployment.env.RESOURCE_MANAGER_ENABLED | quote }}
            - name: DEVICE_TOPOLOGY_ENABLED
              value: {{ .Values.deployment.env.DEVICE_TOPOLOGY_ENABLED | quote }}
            # azureAuth
            - name: AZURE_LOGIN_URL
              value: {{ .Values.deployment.azureAuth.AZURE_LOGIN_URL | quote }}
            - name: AZURE_TENANT_NAME
              value: {{ .Values.deployment.azureAuth.AZURE_TENANT_NAME | quote }}
            - name: AZURE_TENANT_ID
              value: {{ .Values.deployment.azureAuth.AZURE_TENANT_ID | quote }}
            - name: AZURE_KRAKEND_PLUGIN_JWT_VALUE_PREFIX
              value: {{ .Values.deployment.azureAuth.AZURE_KRAKEND_PLUGIN_JWT_VALUE_PREFIX | quote }}
            - name: AZURE_KRAKEND_PLUGIN_GROUP_DISABLE
              value: {{ .Values.deployment.azureAuth.AZURE_KRAKEND_PLUGIN_GROUP_DISABLE | quote }}
            {{- if .Values.deployment.azureAuth.enabled }}
            - name: AZURE_KRAKEND_PLUGIN_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "krakend.secretName" . }}
                  key: AZURE_KRAKEND_PLUGIN_CLIENT_ID
            - name: AZURE_KRAKEND_PLUGIN_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "krakend.secretName" . }}
                  key: AZURE_KRAKEND_PLUGIN_CLIENT_SECRET
            {{- end }}
            # RBAC - UNICONFIG
            - name: UNICONFIG_CONTROLLER_ADMIN_GROUP
              value: {{ .Values.deployment.rbac.UNICONFIG_CONTROLLER_ADMIN_GROUP | quote }}
            # RBAC - UNISTORE
            - name: UNISTORE_CONTROLLER_ADMIN_GROUP
              value: {{ .Values.deployment.rbac.UNISTORE_CONTROLLER_ADMIN_GROUP | quote }}
            - name: UNISTORE_BEARER_ROLE
              value: {{ .Values.deployment.rbac.UNISTORE_BEARER_ROLE | quote }}
            - name: UNISTORE_SERVICE_ROLE
              value: {{ .Values.deployment.rbac.UNISTORE_SERVICE_ROLE | quote }}
            - name: UNISTORE_NETWORK_ROLE
              value: {{ .Values.deployment.rbac.UNISTORE_NETWORK_ROLE | quote }}
            - name: UNISTORE_OTHER_PERMITTED_ROLES
              value: {{ .Values.deployment.rbac.UNISTORE_OTHER_PERMITTED_ROLES | quote }}
            - name: UNISTORE_BEARER_NODE
              value: {{ .Values.deployment.rbac.UNISTORE_BEARER_NODE | quote }}
            - name: UNISTORE_SERVICE_NODE
              value: {{ .Values.deployment.rbac.UNISTORE_SERVICE_NODE | quote }}
            - name: UNISTORE_NETWORK_NODE
              value: {{ .Values.deployment.rbac.UNISTORE_NETWORK_NODE | quote }}
            # RBAC - RESOURCE-MANAGER
            - name: RM_ADMIN_GROUPS
              value: {{ .Values.deployment.rbac.RM_ADMIN_GROUPS | quote }}
            - name: RM_ADMIN_ROLES
              value: {{ .Values.deployment.rbac.RM_ADMIN_ROLES | quote }}
            # RBAC - INVENTORY
            - name: INVENTORY_ADMIN_GROUP
              value: {{ .Values.deployment.rbac.INVENTORY_ADMIN_GROUP | quote }}
            # RBAC - WORKFLOW_PROXY
            - name: ADMIN_ACCESS_ROLE
              value: {{ .Values.deployment.rbac.ADMIN_ACCESS_ROLE | quote }}
            # RBAC - WORKERS
            - name: X_AUTH_USER_GROUP
              value: {{ .Values.deployment.rbac.X_AUTH_USER_GROUP | quote }}
            # PROXY
            - name: PROXY_ENABLED
              value: {{ .Values.deployment.env.PROXY_ENABLED | quote }}
            {{- if .Values.deployment.env.PROXY_ENABLED }}  
            - name: HTTP_PROXY
              value: {{ .Values.deployment.env.HTTP_PROXY | quote }}
            - name: HTTPS_PROXY
              value: {{ .Values.deployment.env.HTTPS_PROXY | quote }}
            - name: NO_PROXY
              value: "workflow-proxy,frinx-frontend,inventory,krakend,unistore,resource-manager,{{ .Values.deployment.env.NO_PROXY }},$(UNICONFIG_ZONES_LIST)"
            {{- end }}
          {{- range $key, $val := .Values.deployment.extraEnv }}
            - name: {{ $key | quote }}
              value: {{ $val | quote }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /__health
              port: http
          readinessProbe:
            httpGet:
              path: /__health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
