# Default values for krakend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: frinx/krakend
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

proxyImage:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 1.25.4-alpine

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  # enabled: true
  # fsGroup: 0

containerSecurityContext:
  capabilities:
    drop:
      - ALL

service:
  type: ClusterIP
  # SideCar proxy (nginx reverse proxy for http/ws protocols)
  port: 8080
  targetPort: 8080
  nodePort: 30000

ingress:
  enabled: false
  className: ""
  labels: {}
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

env:
  TLS_DISABLED: true
  DEFAULT_TIMEOUT: "2m"
  KRAKEND_TLS_PROTOCOL: "http"
  ALLOWED_HOSTS:
  ALLOWED_ORIGINS:
  LOG_LEVEL: INFO

  # Proxy settings
  PROXY_ENABLED: false
  HTTP_PROXY:
  HTTPS_PROXY:
  NO_PROXY:

  # Uniconfig settings
  UNICONFIG_PROTOCOL: "http"
  UNICONFIG_ZONES_LIST: "uniconfig"
  UNICONFIG_TIMEOUT: "2m"

  # KrakenD endpoints settings
  WORKFLOW_MANAGER_ENABLED: true
  UNICONFIG_ENABLED: true
  INVENTORY_ENABLED: true
  RESOURCE_MANAGER_ENABLED: true
  L3VPN_ENABLED: false
  DEVICE_TOPOLOGY_ENABLED: true

  # Oauth2-Proxy
  OAUTH2_KRAKEND_PLUGIN_TENANT_ID: "frinx"
  OAUTH2_KRAKEND_PLUGIN_USER_ROLES_MAP: "X-Forwarded-Roles"
  OAUTH2_KRAKEND_PLUGIN_USER_GROUPS_MAP: "X-Forwarded-Groups"
  OAUTH2_KRAKEND_PLUGIN_FROM_MAP: "X-Forwarded-User"

rbac:
  UNICONFIG_CONTROLLER_ADMIN_GROUP: "network-admin"
  UNISTORE_CONTROLLER_ADMIN_GROUP: "network-admin"
  UNISTORE_BEARER_ROLE: ""
  UNISTORE_SERVICE_ROLE: ""
  UNISTORE_NETWORK_ROLE: ""
  UNISTORE_OTHER_PERMITTED_ROLES: ""
  UNISTORE_BEARER_NODE: "bearer"
  UNISTORE_SERVICE_NODE: "service"
  UNISTORE_NETWORK_NODE: "network"

  INVENTORY_ADMIN_GROUP: "network-admin"
  ADMIN_ACCESS_ROLE: "network-admin"
  X_AUTH_USER_GROUP: "network-admin"

debug:
  enabled: false
  x_forwarded_roles: "owner"
  x_forwarded_groups: "network-admin"
  x_forwarded_user: "frinx-admin-user"

extraEnv: []
volumes:
  azureFile:
    enabled: false
    storage:
      accountName:
      accessKey:

nginx:
  clientBodyBufferSize: "8k"
  clientHeaderBufferSize: "1k"
