{{ $zones := env "UNICONFIG_ZONES_LIST" }}
{{ $protocol := env "KRAKEND_TLS_PROTOCOL" }}
{{ $uniconfig_protocol := env "UNICONFIG_PROTOCOL" }}
{{ $zone_list := splitList "," $zones }}

{{range $host_index, $host := $zone_list}}
{{range $index_in_range, $not_used_element := $.range}}

{
    "endpoint": "/api/{{$host}}/operations{{range $index_for_uri, $not_used_element2 := $.range -}} {{- if le $index_for_uri $index_in_range -}} /{{"{"}}n_{{$index_for_uri}}{{"}" -}} {{end}}{{end}}",
    "timeout": "{{ env "UNICONFIG_TIMEOUT" }}",
    "method": "POST",
    "output_encoding": "no-op",
    "input_query_strings": ["*"],
    "input_headers": [ {{ include "allowed_headers.tmpl" }}, "Accept", "cookie" ],
    "extra_config": {

            {{ $rate_enabled := env "RATE_LIMIT_UNICONFIG_ROUTER_ENABLED" }}
            {{- if eq $rate_enabled "true" }}
            "qos/ratelimit/router": {
                "client_capacity": {{ env "RATE_LIMIT_UNICONFIG_ROUTER_CLIENTCAPACITY" }},
                "client_max_rate": {{ env "RATE_LIMIT_UNICONFIG_ROUTER_MAXRATE" }},
                "every": {{ env "RATE_LIMIT_UNICONFIG_ROUTER_EVERY" | quote }},
                "strategy": "ip"
            },
            {{- end }}

            "modifier/lua-endpoint": {
                "sources": ["scripts/uniconfig_rbac.lua", "scripts/header_check.lua"],
                "allow_open_libs": true,
                "pre": "local r = ctx.load(); user_group_auth(r, os.getenv('UNICONFIG_CONTROLLER_ADMIN_GROUP')); check_header(r)",
                "live": true
            }                

    },

    "backend": [
        {
            "url_pattern": "/rests/operations{{range $index_for_uri, $not_used_element2 := $.range -}} {{- if le $index_for_uri $index_in_range -}} /{{"{"}}n_{{$index_for_uri}}{{"}" -}} {{end}}{{end}}",
            "extra_config": {
                {{ include "uc_modifiers.tmpl" }}
                {{ $rate_enabled := env "RATE_LIMIT_UNICONFIG_PROXY_ENABLED" }}
                {{- if eq $rate_enabled "true" }}
                , 
                "qos/ratelimit/proxy": {
                    "max_rate": {{ env "RATE_LIMIT_UNICONFIG_PROXY_MAXRATE" }},
                    "every": {{ env "RATE_LIMIT_UNICONFIG_PROXY_EVERY" | quote }},
                    "capacity": {{ env "RATE_LIMIT_UNICONFIG_PROXY_CAPACITY" }}
                }
                {{- end }}
            },
            "encoding": "no-op",
            "host": [
                "{{$uniconfig_protocol}}://{{$host}}:8181"
            ]
        }
    ]
},
{{end}}
{{end}}


{{range $host_index, $host := $zone_list}}
{{range $index_in_range, $not_used_element := $.range}}
{{range $method_index, $method := $.methods}}

{
    "endpoint": "/api/{{$host}}/data{{range $index_for_uri, $not_used_element2 := $.range -}} {{- if le $index_for_uri $index_in_range -}} /{{"{"}}n_{{$index_for_uri}}{{"}" -}} {{end}}{{end}}",
    "timeout": "{{ env "UNICONFIG_TIMEOUT" }}",
    "method": "{{$method}}",
    "output_encoding": "no-op",
    "input_query_strings": ["*"],
    "input_headers": [ {{ include "allowed_headers.tmpl" }}, "Accept", "cookie" ],
    "extra_config": {
            {{ $rate_enabled := env "RATE_LIMIT_UNICONFIG_ROUTER_ENABLED" }}
            {{- if eq $rate_enabled "true" }}
            "qos/ratelimit/router": {
                "client_capacity": {{ env "RATE_LIMIT_UNICONFIG_ROUTER_CLIENTCAPACITY" }},
                "client_max_rate": {{ env "RATE_LIMIT_UNICONFIG_ROUTER_MAXRATE" }},
                "every": {{ env "RATE_LIMIT_UNICONFIG_ROUTER_EVERY" | quote }},
                "strategy": "ip"
            },
            {{- end }}
            "modifier/lua-endpoint": {
                "sources": ["scripts/uniconfig_query_escape.lua", "scripts/uniconfig_rbac.lua", "scripts/header_check.lua"],
                "allow_open_libs": true,
                "pre": "local r = ctx.load(); r:url(urlencode(r)); user_group_auth(r, os.getenv('UNICONFIG_CONTROLLER_ADMIN_GROUP')); check_header(r)",
                "live": true
            }                    

    },

    "backend": [
        {
            "url_pattern": "/rests/data{{range $index_for_uri, $not_used_element2 := $.range -}} {{- if le $index_for_uri $index_in_range -}} /{{"{"}}n_{{$index_for_uri}}{{"}" -}} {{end}}{{end}}",
            "extra_config": {
                {{ include "uc_modifiers.tmpl" }}
                {{ $rate_enabled := env "RATE_LIMIT_UNICONFIG_PROXY_ENABLED" }}
                {{- if eq $rate_enabled "true" }}
                , 
                "qos/ratelimit/proxy": {
                    "max_rate": {{ env "RATE_LIMIT_UNICONFIG_PROXY_MAXRATE" }},
                    "every": {{ env "RATE_LIMIT_UNICONFIG_PROXY_EVERY" | quote }},
                    "capacity": {{ env "RATE_LIMIT_UNICONFIG_PROXY_CAPACITY" }}
                }
                {{- end }}
            },
            "encoding": "no-op",
            "host": [
                "{{$uniconfig_protocol}}://{{$host}}:8181"
            ]
        }
    ]
},

{{end}}
{{end}}
{{end}}

{
    "@comment": "Return list of uniconfig-controller zones",

    "endpoint": "/static/list/uniconfig",
    "method": "GET",

    "extra_config": {
    {{ $rate_enabled := env "RATE_LIMIT_UNICONFIG_ROUTER_ENABLED" }}
    {{- if eq $rate_enabled "true" }}
        "qos/ratelimit/router": {
            "client_capacity": {{ env "RATE_LIMIT_UNICONFIG_ROUTER_CLIENTCAPACITY" }},
            "client_max_rate": {{ env "RATE_LIMIT_UNICONFIG_ROUTER_MAXRATE" }},
            "strategy": "ip"
        }
    {{- end }}
    },

    "backend": [
        {
            "url_pattern": "/__health",
            "extra_config": {
                {{ include "modifiers.tmpl" }}
                {{ $rate_enabled := env "RATE_LIMIT_UNICONFIG_PROXY_ENABLED" }}
                {{- if eq $rate_enabled "true" }}
                , 
                "qos/ratelimit/proxy": {
                    "max_rate": {{ env "RATE_LIMIT_UNICONFIG_PROXY_MAXRATE" }},
                    "every": {{ env "RATE_LIMIT_UNICONFIG_PROXY_EVERY" | quote }},
                    "capacity": {{ env "RATE_LIMIT_UNICONFIG_PROXY_CAPACITY" }}
                }
                {{- end }}
            },
            "host": [ "{{$protocol}}://krakend:8080/" ],
            "allow": [
                "instances"
            ]
        }
    ],
   
    "extra_config": {
        "proxy": {
            "static": {
                "strategy": "always",
                "data": {
                    "instances": [ {{range $host_index, $host := $zone_list}} {{if gt $host_index 0}},{{end}} "{{$host}}" {{end}} ]
                }
            }
        }
    }
}
