apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "uniconfig.fullname" . }}
  labels:
    {{- include "uniconfig.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "uniconfig.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if .Values.alwaysRollAfterUpgrade }}
        rollme: {{ randAlphaNum 5 | quote }}
        {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "uniconfig.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: uniconfig-frinx-volume
          emptyDir: {}
        - name: frinx-uniconfig-controller-logs
          emptyDir: {}
        - name: logback
          configMap:
            name: {{ include "uniconfig.logbackConfigMapName" . }}
            defaultMode: 0777
            items:
            - key: logback.xml
              path: logback.xml
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "uniconfig.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: check-db-ready
          image: postgres:alpine
          command: ['sh', '-c',
            "until pg_isready -h ${DBPERSISTENCE_CONNECTION_DATABASELOCATIONS_0_HOST} -p 5432 -U ${DBPERSISTENCE_CONNECTION_USERNAME};
            do echo waiting for database; sleep 2; done;"]
          env:
            - name: DBPERSISTENCE_CONNECTION_DATABASELOCATIONS_0_HOST
              {{- if .Values.postgresql.enabled }}
              value: "{{ .Release.Name }}-postgresql"
              {{- else }}
              value: {{ .Values.dbPersistence.POSTGRES_HOST | quote }}
              {{- end }}
            - name: DBPERSISTENCE_CONNECTION_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "uniconfig.secretName" . }}
                  {{- if (include "uniconfig.createSecret" .) }}
                  key: POSTGRES_USERNAME
                  {{- else }}
                  key: {{ .Values.dbPersistence.existingSecret.postgresUsernameKey }}
                  {{- end}}
        - name: copy-config-files
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command:
            - sh
            - '-c'
            - 'cp -r /opt/uniconfig-frinx/* /tmp/uniconfig-frinx/'
          volumeMounts:
            - name: uniconfig-frinx-volume
              mountPath: /tmp/uniconfig-frinx/
        {{- if .Values.cacheImage.enabled }}
        - name: copy-uniconfig-cache
          image: {{ .Values.cacheImage.repository }}:{{ .Values.cacheImage.tag }}
          command:
            - sh
            - '-c'
            - 'cp -rp {{ .Values.cacheImage.cachePath }} /tmp/uniconfig-frinx/cache && chmod -R 777 /tmp/uniconfig-frinx/cache'
          volumeMounts:
            - name: uniconfig-frinx-volume
              mountPath: /tmp/uniconfig-frinx
        {{- end }}
        {{- if .Values.mibsImage.enabled }}
        - name: copy-mibs-files
          image: {{ .Values.mibsImage.repository }}:{{ .Values.mibsImage.tag }}
          command:
            - sh
            - '-c'
            - 'mkdir -p /tmp/uniconfig-frinx/mibs && cp -rp {{ .Values.mibsImage.mibsPath }} /tmp/uniconfig-frinx/mibs && chmod -R 777 /tmp/uniconfig-frinx/mibs'
          volumeMounts:
            - name: uniconfig-frinx-volume
              mountPath: /tmp/uniconfig-frinx
        {{- end }}
        {{- with .Values.extraInitContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.extraInitContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh","-c"]
          args: ["/opt/uniconfig-frinx/run_uniconfig.sh"]
          volumeMounts:
          - name: frinx-uniconfig-controller-logs
            mountPath: /opt/uniconfig-frinx/log
          - name: uniconfig-frinx-volume
            mountPath: /opt/uniconfig-frinx
          - name: logback
            mountPath: /opt/uniconfig-frinx/config/logback.xml
            subPath: logback.xml
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - 'curl --insecure -o /dev/null --silent --write-out "%{http_code}" -X POST localhost:8181/rests/operations/uniconfig-manager:health -H "Content-Type:application/json"'
            timeoutSeconds: 35
            failureThreshold: 20
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - 'curl --insecure -o /dev/null --silent --write-out "%{http_code}" -X POST localhost:8181/rests/operations/uniconfig-manager:health -H "Content-Type:application/json"'
            timeoutSeconds: 35
            failureThreshold: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: CONTAINER_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SERVICE_NAME
              value: {{ .Values.serviceName | quote }}
            - name: PROXY_ENABLED
              value: {{ .Values.proxy.enabled | quote }}
            - name: HTTP_PROXY
              value: {{ .Values.proxy.http_proxy | quote }}
            - name: HTTPS_PROXY
              value: {{ .Values.proxy.https_proxy | quote }}
            - name: NO_PROXY
              value: {{ .Values.proxy.no_proxy | quote }}
            - name: JAVA_MAX_MEM
              value: {{ .Values.java.max_mem | quote }}
            - name: DBPERSISTENCE_CONNECTION_DATABASELOCATIONS_0_HOST
              {{ if .Values.postgresql.enabled -}}
              value: "{{ .Release.Name }}-postgresql"
              {{- else }}
              value: {{ .Values.dbPersistence.POSTGRES_HOST | quote }}
              {{- end }}
            - name: DBPERSISTENCE_CONNECTION_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "uniconfig.secretName" . }}
                  {{- if (include "uniconfig.createSecret" .) }}
                  key: POSTGRES_USERNAME
                  {{- else }}
                  key: {{ .Values.dbPersistence.existingSecret.postgresUsernameKey }}
                  {{- end}}
            - name: DBPERSISTENCE_CONNECTION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "uniconfig.secretName" . }}
                  {{- if (include "uniconfig.createSecret" .) }}
                  key: POSTGRES_PASSWORD
                  {{- else }}
                  key: {{ .Values.dbPersistence.existingSecret.postgresPasswordKey }}
                  {{- end}}
            - name: CLISHELL_SSHSERVER_USERNAMEPASSWORDAUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "uniconfig.secretName" . }}
                  {{- if (include "uniconfig.createSecret" .) }}
                  key: CLISHELL_SSHSERVER_USERNAMEPASSWORDAUTH_PASSWORD
                  {{- else }}
                  key: {{ .Values.dbPersistence.existingSecret.clishellSshserverUsernamepasswordauthPasswordKey }}
                  {{- end}}
          {{- range $key, $val := .Values.extraEnv }}
            - name: {{ $key | quote }}
              value: {{ $val | quote }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
