# Default values for uniconfig.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: frinx/uniconfig
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets:
  - name: regcred

nameOverride: ""
fullnameOverride: "uniconfig-controller"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
    add:
    - CAP_NET_BIND_SERVICE
    - NET_ADMIN

service:
  annotations:
    # Use this annotations for traefik as ingress
    traefik.ingress.kubernetes.io/service.sticky.cookie: "true"
    traefik.ingress.kubernetes.io/service.sticky.cookie.name: uniconfig_server_id
    traefik.ingress.kubernetes.io/service.passhostheader: "true"
  type: ClusterIP
  port: 8181
  loadBalancerIP:

ingress:
  enabled: true
  labels: {}
    # environment: development
  annotations:
    # Use this annotations for traefik as ingress
    # kubernetes.io/ingress.class: 'traefik-uniconfig'
  ingressClassName: traefik-uniconfig
  path: /
  pathType: Prefix

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

serviceName: "uniconfig"
tls_keystorePassword: "password"

proxy:
  enabled: false
  http_proxy:
  https_proxy:
  no_proxy:

alwaysRollAfterUpgrade: false
extraScriptConfigMap:
extraLightyConfigMap:
extraLogbackConfigMap:

java:
  max_mem: "10G"

dbPersistence:
  POSTGRES_HOST:
  existingSecret:
    secretName:
    postgresUsernameKey:
    postgresPasswordKey:
    clishellSshserverUsernamepasswordauthPasswordKey:
  POSTGRES_USERNAME: postgresU
  POSTGRES_PASSWORD: postgresP
  CLISHELL_SSHSERVER_USERNAMEPASSWORDAUTH_PASSWORD: admin

extraEnv:
  DBPERSISTENCE_CONNECTION_DBNAME: uniconfig
  # DBPERSISTANCE CONNECTION PARAMETERS, CREDENTIALS STORED IN SECRETS
  DBPERSISTENCE_EMBEDDEDDATABASE_ENABLED: false
  DBPERSISTENCE_CONNECTION_DATABASELOCATIONS_0_PORT: 5432
  DBPERSISTENCE_CONNECTION_MAXDBPOOLSIZE: 300
  # CLI SHELL CONFIGURATION, CREDENTIALS STORED IN SECRETS
  CLISHELL_SSHSERVER_ENABLED: true
  CLISHELL_SSHSERVER_INETADDRESS: 0.0.0.0
  # UNICONFIG TRANSACTIONS CONFIGURATION
  TRANSACTIONS_TRANSACTIONIDLETIMEOUT: 3600
  TRANSACTIONS_MAXTRANSACTIONAGE: 7200
  TRANSACTIONS_MAXSTOREDTRANSACTIONS: 100
 # KAFKA CLOUD CONFIG
  UNICONFIG_CLOUD_CONFIG_ENABLED: false
  SPRING_CLOUD_BUS_ENABLED: false
  SPRING_AUTOCONFIGURE_EXCLUDE: org.springframework.cloud.stream.function.FunctionConfiguration

azure:
  AKS:
    enabled: false
    storage:
      existingSecret:
      accountName:
      accessKey:

postgresql:
  enabled: true
  auth:
    enablePostgresUser: true
    username: postgresU
    password: postgresP
    database: uniconfig
  architecture: standalone

mountCachePath: "/opt/uniconfig-frinx/cache"

cacheImage:
  enabled: false
  repository:
  tag: ""
  cachePath:

mountMibsPath: "/opt/uniconfig-frinx/mibs"

mibsImage:
  enabled: false
  repository:
  tag: ""
  mibsPath:

extraInitContainers: []

traefikExtraService:
  enabled: false
  name: "unistore"

traefik:
  fullnameOverride: "uniconfig"
  enabled: true
  ingress: {}
  ingressClass:
    enabled: false
  ingressRoute:
    dashboard:
      enabled: false
  service:
    type: ClusterIP
  ports:
    uniconfig:
      port: 8181
      expose: true
      exposedPort: 8181
      protocol: TCP
  providers:
    kubernetesIngress:
      # ingressClass: traefik-uniconfig
      # labelSelector: environment=development
