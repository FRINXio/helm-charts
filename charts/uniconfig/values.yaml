# Default values for uniconfig.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
      - ALL
    add:
      - CAP_NET_BIND_SERVICE
      - NET_ADMIN

service:
  annotations: {}
  type: ClusterIP
  port: 8181
  loadBalancerIP:

ingress:
  enabled: false
  className: ""
  labels: {}
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

# DEPLOYMENT configuration

# if you want to use more than 1 replica, must deploy it with cookie sticky sessions
# to create sticky session, deploy it with traefik and set highAvailability.enabled=true
replicaCount: 1

highAvailability:
  enabled: false
  traefik:
    selectorName:
    selectorInstance:
    entrypoint: uniconfig
    port: 8181
  stickyCookie:
    name: uniconfig_server_id
    httpOnly: true
    secure: true
    sameSite: strict
  hosts:
    # TODO can't use same name as chart name because conflict of LB and app
    - uniconfig

image:
  repository: frinx/uniconfig
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets:
  - name: regcred

affinity: {}

nodeSelector: {}

tolerations: []

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

alwaysRollAfterUpgrade: false
extraScriptConfigMap:
extraLogbackConfigMap:

# Init containers
# global configuration of mibs

mibsConfigs:
  # mibs1:
  #   repository: frinx/uniconfig
  #   tag: latest
  #   mibsPath:
  # mibs2:
  #   repository: frinx/uniconfig
  #   tag: ""
  #   mibsPath:

# global configuration of cache
cacheConfigs:
  # cache1:
  #   repository: frinx/uniconfig
  #   tag: "latest"
  #   cachePath:
  # cache2:
  #   repository: frinx/uniconfig
  #   tag: ""
  #   cachePath:

extraInitContainers: []

# Uniconfig container

command: ["/bin/sh", "-c"]
args: ["/opt/uniconfig-frinx/run_uniconfig.sh"]

# ENV settings

proxy:
  enabled: false
  config:
    HTTP_PROXY:
    HTTPS_PROXY:
    NO_PROXY:

# java max memory
java:
  max_mem: "10G"

# db persistence connection
dbPersistence:
  POSTGRES_HOST:
  existingSecret:
    secretName:
    postgresUsernameKey:
    postgresPasswordKey:
    clishellSshserverUsernamepasswordauthPasswordKey:
  POSTGRES_USERNAME: postgresU
  POSTGRES_PASSWORD: postgresP
  CLISHELL_SSHSERVER_USERNAMEPASSWORDAUTH_PASSWORD: admin

extraEnv:
  DBPERSISTENCE_CONNECTION_DBNAME: uniconfig
  # DBPERSISTENCE CONNECTION PARAMETERS, CREDENTIALS STORED IN SECRETS
  DBPERSISTENCE_EMBEDDEDDATABASE_ENABLED: false
  DBPERSISTENCE_CONNECTION_DATABASELOCATIONS_0_PORT: 5432
  DBPERSISTENCE_CONNECTION_MAXDBPOOLSIZE: 300
  # CLI SHELL CONFIGURATION, CREDENTIALS STORED IN SECRETS
  CLISHELL_SSHSERVER_ENABLED: true
  CLISHELL_SSHSERVER_INETADDRESS: 0.0.0.0
  # UNICONFIG TRANSACTIONS CONFIGURATION
  TRANSACTIONS_TRANSACTIONIDLETIMEOUT: 3600
  TRANSACTIONS_MAXTRANSACTIONAGE: 7200
  TRANSACTIONS_MAXSTOREDTRANSACTIONS: 100
  # KAFKA CLOUD CONFIG
  UNICONFIG_CLOUD_CONFIG_ENABLED: false
  SPRING_CLOUD_BUS_ENABLED: false
  SPRING_AUTOCONFIGURE_EXCLUDE: org.springframework.cloud.stream.function.FunctionConfiguration

# External services

postgresql:
  enabled: true
  auth:
    enablePostgresUser: true
    username: postgresU
    password: postgresP
    database: uniconfig
  architecture: standalone
