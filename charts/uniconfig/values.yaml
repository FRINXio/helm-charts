# Default values for uniconfig.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- String to partially override app name
nameOverride: ""

# -- String to fully override app name
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Pod annotations
podAnnotations: {}
# -- Configure [Pods Security Context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
podSecurityContext:
  {}
  # fsGroup: 2000

# -- Configure [Container Security Context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container)
securityContext:
  {}
  # capabilities:
  #   drop:
  #     - ALL
  #   add:
  #     - CAP_NET_BIND_SERVICE
  #     - NET_ADMIN

service:
  annotations: {}
  # -- Service type
  type: ClusterIP
  # -- Service port
  port: 8181
  # -- Service [Load Balancer IP](https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer)
  loadBalancerIP:

# Configure the [Ingress resource](https://kubernetes.io/docs/concepts/services-networking/ingress/)
ingress:
  # -- Enable ingress
  enabled: false
  # -- IngressClass that will be be used to implement the Ingress
  className: ""
  # -- Additional labels for the Ingress resource
  labels: {}
  # -- Additional annotations for the Ingress resource
  annotations: {}
  # -- [Ingress Host](https://kubernetes.io/docs/concepts/services-networking/ingress/#the-ingress-resource)
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  # -- [Ingress TLS resource](https://kubernetes.io/docs/concepts/services-networking/ingress/#tls)
  tls: []

# -- Number of replicas of the deployment.
# If you want to use more than 1 replica, must deploy it with cookie sticky sessions
# To create sticky session, deploy it with traefik and set highAvailability.enabled=true
replicaCount: 1

highAvailability:
  # -- Deploy extra traefik compatible resources to provide sticky session and zone loadbalancing
  enabled: false
  traefik:
    # -- Override traefik service name. If not defined, default value is uc-zone-lb
    selectorName:
    # -- Override traefik service instance
    selectorInstance:
    # -- Traefik port name for uniconfig entrypoint
    entrypoint: uniconfig
    # -- Traefik port value for uniconfig entrypoint
    port: 8181
  # -- Traefik [sticky cookie](https://doc.traefik.io/traefik/v2.11/routing/services/#sticky-sessions)
  stickyCookie:
    name: uniconfig_server_id
    httpOnly: true
    secure: true
    sameSite: strict
  # -- Additional traefik services which are used to forward requests to uniconfig controller with sticky session
  hosts:
    # TODO can't use same name as chart name because conflict of LB and app
    - uniconfig

image:
  # -- Uniconfig image repository
  repository: frinx/uniconfig
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""
  # -- Image pull policy
  pullPolicy: IfNotPresent

# -- [Image Pull Secrets](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/)
imagePullSecrets:
  - name: regcred

# -- [Affinity for pod assignment](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
affinity: {}

# -- [Node labels for pod assignment](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/)
nodeSelector: {}

# -- [Tolerations for pod assignment](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
tolerations: []

# -- [Container resources](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/)
resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- [Autoscaling parameters](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

alwaysRollAfterUpgrade: false
extraScriptConfigMap:
extraLogbackConfigMap:

# -- global configuration of mibs
mibsConfigs:
  {}
  # mibs1:
  #   repository: frinx/uniconfig
  #   tag: latest
  #   pullPolicy: "IfNotPresent"
  #   mibsPath:
  # mibs2:
  #   repository: frinx/uniconfig
  #   tag: ""
  #   mibsPath:

# -- global configuration of cache
cacheConfigs:
  {}
  # cache1:
  #   repository: frinx/uniconfig
  #   tag: "latest"
  #   pullPolicy: "IfNotPresent"
  #   cachePath:
  # cache2:
  #   repository: frinx/uniconfig
  #   tag: ""
  #   cachePath:

# -- Extra init containers
extraInitContainers: []

# -- Uniconfig container command
command: ["/bin/sh", "-c"]
# -- Uniconfig container args
args: ["/opt/uniconfig-frinx/run_uniconfig.sh"]

# -- Configure proxy settings fr unicnfig container
proxy:
  enabled: false
  config:
    HTTP_PROXY:
    HTTPS_PROXY:
    NO_PROXY:

# -- Startup probe
startupProbe:
  # @ignored
  exec:
    command:
      - /bin/sh
      - -c
      - 'curl --insecure -o /dev/null --silent --write-out "%{http_code}" -X POST localhost:8181/rests/operations/uniconfig-manager:health -H "Content-Type:application/json"'
  timeoutSeconds: 35
  failureThreshold: 25

# -- Liveness probe
livenessProbe:
  # @ignored
  exec:
    command:
      - /bin/sh
      - -c
      - 'curl --insecure -o /dev/null --silent --write-out "%{http_code}" -X POST localhost:8181/rests/operations/uniconfig-manager:health -H "Content-Type:application/json"'
  timeoutSeconds: 35
  failureThreshold: 10

# -- Readiness probe
readinessProbe:
  # @ignored
  exec:
    command:
      - /bin/sh
      - -c
      - 'curl --insecure -o /dev/null --silent --write-out "%{http_code}" -X POST localhost:8181/rests/operations/uniconfig-manager:health -H "Content-Type:application/json"'
  timeoutSeconds: 35
  failureThreshold: 10

# -- Java max memory for Uniconfig container
java:
  max_mem: "10G"

dbPersistence:
  # -- Database hostname
  POSTGRES_HOST:
  # -- Existing database credentials
  existingSecret:
    secretName:
    postgresUsernameKey:
    postgresPasswordKey:
    clishellSshserverUsernamepasswordauthPasswordKey:
  # -- Database credentials. Exposed when existing dbPersistence.existingSecret.secretName is empty
  POSTGRES_USERNAME: postgresU
  POSTGRES_PASSWORD: postgresP
  CLISHELL_SSHSERVER_USERNAMEPASSWORDAUTH_PASSWORD: admin

# -- Application properties
extraEnv:
  # @ignored
  DBPERSISTENCE_CONNECTION_DBNAME: uniconfig
  # DBPERSISTENCE CONNECTION PARAMETERS, CREDENTIALS STORED IN SECRETS
  DBPERSISTENCE_EMBEDDEDDATABASE_ENABLED: false
  DBPERSISTENCE_CONNECTION_DATABASELOCATIONS_0_PORT: 5432
  DBPERSISTENCE_CONNECTION_MAXDBPOOLSIZE: 300
  # CLI SHELL CONFIGURATION, CREDENTIALS STORED IN SECRETS
  CLISHELL_SSHSERVER_ENABLED: true
  CLISHELL_SSHSERVER_INETADDRESS: 0.0.0.0
  # UNICONFIG TRANSACTIONS CONFIGURATION
  TRANSACTIONS_TRANSACTIONIDLETIMEOUT: 3600
  TRANSACTIONS_MAXTRANSACTIONAGE: 7200
  TRANSACTIONS_MAXSTOREDTRANSACTIONS: 100
  # KAFKA CLOUD CONFIG
  UNICONFIG_CLOUD_CONFIG_ENABLED: false
  SPRING_CLOUD_BUS_ENABLED: false
  SPRING_AUTOCONFIGURE_EXCLUDE: org.springframework.cloud.stream.function.FunctionConfiguration
  # kafka NOTIFICATIONS
  NOTIFICATIONS_ENABLED: true
  NOTIFICATIONS_KAFKA_KAFKASERVERS_0_BROKERHOST: kafka
  NOTIFICATIONS_KAFKA_KAFKASERVERS_0_BROKERLISTENINGPORT: 9092
  SPRING_KAFKA_BOOTSTRAPSERVERS: http://kafka:9092

# External services
# -- Internal Postgres Database
postgresql:
  enabled: true
  auth:
    enablePostgresUser: true
    username: postgresU
    password: postgresP
    database: uniconfig
  architecture: standalone

# -- [Kafka subchart: "https://artifacthub.io/packages/helm/bitnami/kafka"]
kafka:
  # @ignored
  enabled: true
  fullnameOverride: kafka
  listeners:
    client:
      protocol: PLAINTEXT
