# Default values for conductor and proxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: frinx/conductor-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

proxyImage:
  repository: frinx/workflow-proxy
  pullPolicy: IfNotPresent
  tag: "latest"

schellarImage:
  repository: frinx/schellar
  pullPolicy: IfNotPresent
  tag: "2.0.1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: workflow-proxy

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL

service:
  type: ClusterIP
  port: 8088
  portWorkers: 8089
  portSchellar: 8087
  portConductor: 8080

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
resourcesProxy: {}

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

configScripts:
  log4j.properties: |
    {{ .Files.Get "configs/log4j.properties" }}

conductorEnv:
  CONFIG_PROP: config.properties
  _JAVA_OPTIONS: -Xmx2g
  LOG4J_PROP: log4j.properties
  # SCHELLAR_TARGET: http://schellar:3000 treba???
  SPRING_DATASOURCE_HOSTNAME:
  SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/conductor?charset=utf8&parseTime=true&interpolateParams=true
  CONDUCTOR_EXTERNALPAYLOADSTORAGE_POSTGRES_URL: jdbc:postgresql://postgresql:5432/conductor?charset=utf8&parseTime=true&interpolateParams=true

conductorExtraEnv:
  CONDUCTOR_APP_OWNEREMAILMANDATORY: false
  CONDUCTOR_DB_TYPE: postgres
  SPRING_DATASOURCE_USERNAME: postgresU
  SPRING_DATASOURCE_PASSWORD: postgresP
  SPRING_SEARCHDATASOURCE_URL: jdbc:postgresql://postgresql:5432/conductor?charset=utf8&parseTime=true&interpolateParams=true
  SPRING_SEARCHDATASOURCE_USERNAME: postgresU
  SPRING_SEARCHDATASOURCE_PASSWORD: postgresP
  SPRING_SEARCHDATASOURCE_HIKARI_MAXIMUMPOOLSIZE: 8
  CONDUCTOR_EXTERNAL_PAYLOAD_STORAGE_POSTGRES_USERNAME: postgresU
  CONDUCTOR_EXTERNAL_PAYLOAD_STORAGE_POSTGRES_PASSWORD: postgresP
  CONDUCTOR_APP_ASYNCINDEXINGENABLED: false
  CONDUCTOR_INDEXING_ENABLED: false
  CONDUCTOR_ARCHIVE_DB_TYPE: postgres
  CONDUCTOR_ARCHIVE_DB_ENABLED: true
  CONDUCTOR_ARCHIVE_DB_INDEXER_THREADCOUNT: 4
  CONDUCTOR_ARCHIVE_DB_INDEXER_POLLINGINTERVAL: 10
  CONDUCTOR_ADDITIONAL_MODULES: com.netflix.conductor.contribs.metrics.MetricsRegistryModule,com.netflix.conductor.contribs.metrics.LoggingMetricsModule
  CONDUCTOR_METRICSLOGGER_ENABLED: true 
  CONDUCTOR_METRICSLOGGER_REPORTPERIODSECONDS: 15
  CONDUCTOR_METRICSDATADOG_ENABLED: false
  CONDUCTOR_METRICSPROMETHEUS_ENABLED: false
  # Increase payload threshold limits for transferring big schemas to PostgreSQL
  CONDUCTOR_APP_WORKFLOWINPUTPAYLOADSIZETHRESHOLD: 85
  CONDUCTOR_APP_WORKFLOWOUTPUTPAYLOADSIZETHRESHOLD: 85
  CONDUCTOR_APP_MAXWORKFLOWINPUTPAYLOADSIZETHRESHOLD: 1024000
  CONDUCTOR_APP_MAXWORKFLOWOUTPUTPAYLOADSIZETHRESHOLD: 1024000
  CONDUCTOR_APP_TASKINPUTPAYLOADSIZETHRESHOLD: 85
  CONDUCTOR_APP_TASKOUTPUTPAYLOADSIZETHRESHOLD: 85
  CONDUCTOR_APP_MAXTASKINPUTPAYLOADSIZETHRESHOLD: 85
  CONDUCTOR_APP_MAXTASKOUTPUTPAYLOADSIZETHRESHOLD: 85
  # PostgreSQL External Payload Storage variables
  CONDUCTOR_EXTERNALPAYLOADSTORAGE_TYPE: postgres
  CONDUCTOR_EXTERNALPAYLOADSTORAGE_POSTGRES_CONDUCTORURL: http://workflow-proxy:8088/proxy
  CONDUCTOR_EXTERNALPAYLOADSTORAGE_POSTGRES_MAXDATAROWS: 1000000
  CONDUCTOR_EXTERNALPAYLOADSTORAGE_POSTGRES_MAXDATADAYS: 0
  CONDUCTOR_EXTERNALPAYLOADSTORAGE_POSTGRES_MAXDATAMONTHS: 0
  CONDUCTOR_EXTERNALPAYLOADSTORAGE_POSTGRES_MAXDATAYEARS: 1
  LOADSAMPLE: false
  # Internal conductor properties
  CONDUCTOR_APP_EXECUTORSERVICEMAXTHREADCOUNT: 100
  CONDUCTOR_APP_SYSTEMTASKWORKERCALLBACKDURATION: 10
  CONDUCTOR_APP_WORKFLOWOFFSETTIMEOUT: 5
  CONDUCTOR_APP_TASKEXECUTIONPOSTPONEDURATION: 0
  CONDUCTOR_APP_WORKFLOWEXECUTIONLOCKENABLED: true 
  # Frinx contribution configs
  CONDUCTOR_WORKFLOWEXECUTIONLOCK_TYPE: local_only
  CONDUCTOR_WORKFLOWREPAIRSERVICE_ENABLED: false
  SPRING_AUTOCONFIGURE_EXCLUDE: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration

proxyEnv:
  AUTH_ENABLED: false
  OAUTH2_AUTH_URL: "https://login.microsoftonline.com/common/oauth2/v2.0/authorize"
  OAUTH2_TOKEN_URL: "/api/workflow-manager/docs/token"
  ADMIN_ACCESS_ROLE: "network-admin"
  UNICONFIG_ZONES_LIST: "uniconfig"

schellarEnv:
  LOG_LEVEL: debug
  CHECK_INTERVAL_SECONDS: 10
  CONDUCTOR_API_URL: http://localhost:8080/api
  BACKEND: postgres
  POSTGRES_MIGRATIONS_DIR: migrations
  POSTGRES_PORT: 5432
  POSTGRES_DATABASE_URL: "host=postgresql port=5432 user=postgres password=postgres database=schellar"

postgresql:
  enabled: true
  auth:
    enablePostgresUser: true
    username: postgresU
    password: postgresP
    database: conductor
  architecture: standalone
  primary:
    initdb:
      scripts:
        init_db.sql: |
          CREATE DATABASE schellar;
