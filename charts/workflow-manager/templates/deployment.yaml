apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "workflow-manager.fullname" . }}
  labels:
    {{- include "workflow-manager.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "workflow-manager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "workflow-manager.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "workflow-manager.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      restartPolicy: Always
      initContainers:
      - name: check-db-ready
        image: postgres:alpine
        {{ if .Values.conductorEnv.SPRING_DATASOURCE_HOSTNAME }}
        command: ['sh', '-c',
          "until pg_isready -h {{ .Values.conductorEnv.SPRING_DATASOURCE_HOSTNAME }} -p 5432 -U {{ .Values.conductorExtraEnv.SPRING_DATASOURCE_USERNAME }};
          do echo waiting for database; sleep 2; done;"]
        {{ else }}
        command: ['sh', '-c',
          "until pg_isready -h {{ .Release.Name }}-postgresql -p 5432 -U {{ .Values.conductorExtraEnv.SPRING_DATASOURCE_USERNAME }};
          do echo waiting for database; sleep 2; done;"]
        {{ end }}
      containers:
        # conductor-proxy
        - name: {{ .Chart.Name }}-proxy
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.proxyImage.repository }}:{{ .Values.proxyImage.tag }}"
          imagePullPolicy: {{ .Values.proxyImage.pullPolicy }}
          ports:
            - name: http
              containerPort: 8088
              protocol: TCP
            - name: http-schellar
              containerPort: 8087
              protocol: TCP
            - name: http-workers
              containerPort: 8089
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /probe/liveness
              port: http
            initialDelaySeconds: 20
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /probe/readiness
              port: http
            initialDelaySeconds: 20
            timeoutSeconds: 5
            failureThreshold: 5
          resources:
            {{- toYaml .Values.resourcesProxy | nindent 12 }}
          env:
            - name: "PROXY_TARGET"
              value: http://localhost:8080
            - name: "SCHELLAR_TARGET"
              value: http://localhost:3000
            - name: OAUTH2
              value: {{ .Values.proxyEnv.AUTH_ENABLED | quote }}
            - name: OAUTH2_AUTH_URL
              value: {{ .Values.proxyEnv.OAUTH2_AUTH_URL | quote }}
            - name: OAUTH2_TOKEN_URL
              value: {{ .Values.proxyEnv.OAUTH2_TOKEN_URL | quote }}
            - name: ADMIN_ACCESS_ROLE
              value: {{ .Values.proxyEnv.ADMIN_ACCESS_ROLE | quote }}
            - name: UNICONFIG_ZONES_LIST
              value: {{ .Values.proxyEnv.UNICONFIG_ZONES_LIST | quote }}
        # conductor
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http-conductor
              containerPort: 8080
              protocol: TCP
            - name: grpc-conductor
              containerPort: 8090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http-conductor
            initialDelaySeconds: 60
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: http-conductor
            initialDelaySeconds: 60
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: "CONFIG_PROP"
              value: {{ .Values.conductorEnv.CONFIG_PROP }}
            - name: "LOG4J_PROP"
              value: {{ .Values.conductorEnv.LOG4J_PROP }}
            - name: "_JAVA_OPTIONS"
              value: {{ .Values.conductorEnv._JAVA_OPTIONS}}
            {{ if .Values.postgresql.enabled }}
            - name: "SPRING_DATASOURCE_URL"
              value: jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/conductor?charset=utf8&parseTime=true&interpolateParams=true
            - name: "CONDUCTOR_EXTERNALPAYLOADSTORAGE_POSTGRES_URL"
              value: jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/conductor?charset=utf8&parseTime=true&interpolateParams=true
            - name: "SPRING_SEARCHDATASOURCE_URL"
              value: jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/conductor?charset=utf8&parseTime=true&interpolateParams=true
            {{ else }}
            - name: "SPRING_DATASOURCE_URL"
              value: "jdbc:postgresql://{{ .Values.conductorEnv.SPRING_DATASOURCE_HOSTNAME}}:5432/conductor?charset=utf8&parseTime=true&interpolateParams=true"
            - name: "CONDUCTOR_EXTERNALPAYLOADSTORAGE_POSTGRES_URL"
              value: "jdbc:postgresql://{{ .Values.conductorEnv.CONDUCTOR_EXTERNALPAYLOADSTORAGE_POSTGRES_HOSTNAME}}:5432/conductor?charset=utf8&parseTime=true&interpolateParams=true"
            - name: "SPRING_SEARCHDATASOURCE_URL"
              value: "jdbc:postgresql://{{ .Values.conductorEnv.SPRING_SEARCHDATASOURCE_HOSTNAME}}:5432/conductor?charset=utf8&parseTime=true&interpolateParams=true"
            {{ end }}
          {{- range $key, $val := .Values.conductorExtraEnv }}
            - name: {{ $key | quote }}
              value: {{ $val | quote }}
          {{- end }}
          volumeMounts:
            - name: {{ include "workflow-manager.fullname" . }}-config
              mountPath: /app/config/
        # schellar
        - name: {{ .Chart.Name }}-schellar
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.schellarImage.repository }}:{{ .Values.schellarImage.tag }}"
          imagePullPolicy: {{ .Values.schellarImage.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: "LOG_LEVEL"
              value: {{ .Values.schellarEnv.LOG_LEVEL | quote }}
            - name: "CHECK_INTERVAL_SECONDS"
              value: {{ .Values.schellarEnv.CHECK_INTERVAL_SECONDS | quote }}
            - name: "CONDUCTOR_API_URL"
              value: {{ .Values.schellarEnv.CONDUCTOR_API_URL | quote }}
            - name: "BACKEND"
              value: {{ .Values.schellarEnv.BACKEND | quote }}
            - name: "POSTGRES_MIGRATIONS_DIR"
              value: {{ .Values.schellarEnv.POSTGRES_MIGRATIONS_DIR | quote }}
            - name: "POSTGRES_PORT"
              value: {{ .Values.schellarEnv.POSTGRES_PORT | quote }}
              {{ if .Values.postgresql.enabled }}
            - name: "POSTGRES_DATABASE_URL"
              value: "host={{ .Release.Name }}-postgresql port=5432 user=postgresU password=postgresP database=schellar"
              {{ else }}
            - name: "POSTGRES_DATABASE_URL"
              value: {{ .Values.schellarEnv.POSTGRES_DATABASE_URL | quote }}
              {{ end }}
          livenessProbe:
            exec:
              command:
              - wget
              - --spider
              - -q
              - 127.0.0.1:3000/liveness
            initialDelaySeconds: 20
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
              - wget
              - --spider
              - -q
              - 127.0.0.1:3000/liveness
            initialDelaySeconds: 20
            timeoutSeconds: 5
            failureThreshold: 5
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: {{ include "workflow-manager.fullname" . }}-config
        configMap:
          name: {{ include "workflow-manager.fullname" . }}-config
