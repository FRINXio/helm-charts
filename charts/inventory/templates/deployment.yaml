apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "inventory.fullname" . }}
  labels:
    {{- include "inventory.labels" . | nindent 4 }}
  {{- with .Values.deployment.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "inventory.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "inventory.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "inventory.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      restartPolicy: Always
      initContainers:
        - name: check-db-ready
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: postgres:alpine
          env:
            - name: "POSTGRES_HOST"
            {{ if .Values.postgresql.enabled }}            
              value: "{{ .Release.Name }}-postgresql"
            {{ else }}
              value: "{{ .Values.dbPersistence.POSTGRES_HOST }}"
            {{ end }}
            - name: "POSTGRES_PORT"
              value: {{ .Values.dbPersistence.POSTGRES_PORT | quote }}
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "inventory.secretName" . }}
                  {{- if (include "inventory.createSecret" .) }}
                  key: POSTGRES_USERNAME
                  {{- else }}
                  key: {{ .Values.dbPersistence.existingSecret.postgresUsernameKey }}
                  {{- end}}
          command: ['sh', '-c',
            "until pg_isready -h ${POSTGRES_HOST} -p ${POSTGRES_PORT} -U ${POSTGRES_USERNAME};
            do echo waiting for database; sleep 2; done;"]
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          env:
            - name: "UNICONFIG_API_PROTOCOL"
              value: {{ .Values.env.UNICONFIG_API_PROTOCOL | quote }}
            - name: "UNICONFIG_API_PORT"
              value: {{ .Values.env.UNICONFIG_API_PORT | quote }}
            - name: "UNICONFIG_LIST_URL"
              value: {{ .Values.env.UNICONFIG_LIST_URL | quote }}
            - name: "X_TENANT_ID"
              value: {{ .Values.env.X_TENANT_ID | quote }}
            - name: "TOPOLOGY_ENABLED"
              value: {{ .Values.env.TOPOLOGY_ENABLED | quote }}
            - name: "TOPOLOGY_DISCOVERY_API_URL"
              value: {{ .Values.env.TOPOLOGY_DISCOVERY_API_URL | quote }}
            - name: "TOPOLOGY_DISCOVERY_GRAPHQL_API_URL"
              value: {{ .Values.env.TOPOLOGY_DISCOVERY_GRAPHQL_API_URL | quote }}
            - name: "SHELL_HOST"
              value: {{ .Values.env.SHELL_HOST | quote }}
            - name: "POSTGRES_HOST"
              {{- if .Values.postgresql.enabled }}            
              value: "{{ .Release.Name }}-postgresql"
              {{- else }}
              value: "{{ .Values.dbPersistence.POSTGRES_HOST }}"
              {{- end }}
            - name: "POSTGRES_PORT"
              value: {{ .Values.dbPersistence.POSTGRES_PORT | quote }}
            - name: "POSTGRES_DATABASE"
              value: {{ .Values.dbPersistence.POSTGRES_DATABASE | quote }}
            - name: "POSTGRES_DB_SCHEMA"
              value: {{ .Values.dbPersistence.POSTGRES_DB_SCHEMA | quote }}
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "inventory.secretName" . }}
                  {{- if (include "inventory.createSecret" .) }}
                  key: POSTGRES_USERNAME
                  {{- else }}
                  key: {{ .Values.dbPersistence.existingSecret.postgresUsernameKey }}
                  {{- end}}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "inventory.secretName" . }}
                  {{- if (include "inventory.createSecret" .) }}
                  key: POSTGRES_PASSWORD
                  {{- else }}
                  key: {{ .Values.dbPersistence.existingSecret.postgresPasswordKey }}
                  {{- end}}
            - name: "DATABASE_URL"
              value: "postgres://$(POSTGRES_USERNAME):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DATABASE)?sslmode=disable&schema=$(POSTGRES_DB_SCHEMA)"
          {{- range $key, $val := .Values.extraEnv }}
            - name: {{ $key | quote }}
              value: {{ $val | quote }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 20
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 20
            timeoutSeconds: 5
            failureThreshold: 5
          command: ['/bin/sh', '-c']
          args:
          - yarn prisma migrate deploy --schema=prisma/schema.prisma && node index.js
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
