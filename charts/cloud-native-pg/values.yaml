name: null
imageName: "ghcr.io/cloudnative-pg/postgresql:12.18"
imagePullPolicy: IfNotPresent
imagePullSecrets: []
instances: 2
primaryUpdateStrategy: "unsupervised"
primaryUpdateMethod: "switchover"
startDelay: 30
stopDelay: 30

replicationSlots: {}
  # ReplicationSlotsConfiguration encapsulates the configuration of replication slots
  # https://cloudnative-pg.io/documentation/1.18/api_reference/#replicationslotsconfiguration

storage:
  # StorageConfiguration is the configuration of the storage of the PostgreSQL instances
  # https://cloudnative-pg.io/documentation/1.18/api_reference/#storageconfiguration
  size: "1Gi"
  # storageClass: 'default'
  resizeInUseVolumes: true

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

postgresql:
  # PostgresConfiguration defines the PostgreSQL configuration
  # https://cloudnative-pg.io/documentation/1.18/api_reference/#postgresconfiguration
  parameters:
    max_connections: '300'
  #   shared_buffers: 256MB
  # pg_hba:
  #   - host all all 10.244.0.0/16 md5

bootstrap:
  initdb:
    database: frinx
    owner: frinx
    # secret:
    #   name: frinx-user
    postInitSQL: {}
    postInitTemplateSQL: {}
    postInitApplicationSQL: {}
    postInitApplicationSQLRefs:
      # extraConfigMapRefs holds a list of references to configmaps
      # key-value format 
      extraConfigMapRefs: {}
      # extraSecretRefs holds a list of references to secrets
      # key-value format 
      extraSecretRefs: {}
      # secretRefs:
      #   - name: cloud-native-pq-post-init-sql-secret
      #     key: secret.sql
backup: {}
  # BackupConfiguration defines how the backup of the cluster are taken.
  # Currently the only supported backup method is barmanObjectStore.
  # For details and examples refer to the Backup and Recovery section of the documentation
  # https://cloudnative-pg.io/documentation/1.18/api_reference/#backupconfiguration


monitoring: {}
  # MonitoringConfiguration is the type containing all the monitoring configuration for a certain cluster
  # https://cloudnative-pg.io/documentation/1.18/api_reference/#MonitoringConfiguration

env: {}

envFrom: {}

logLevel: "info"

affinity: {}
  # AffinityConfiguration contains the info we need to create the affinity rules for Pods
  # https://cloudnative-pg.io/documentation/1.18/api_reference/#AffinityConfiguration

secrets:
  superuserSecret: 
    existingSecret:
    username: postgres
    password: postgres
  userSecret: 
    existingSecret:
    username: frinx
    password: frinx
  postInitSqlSecret:
    # existingSecret:
    # sql: |-
    #   CREATE SCHEMA inventory AUTHORIZATION inventory;
