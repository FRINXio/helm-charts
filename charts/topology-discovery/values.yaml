# Default values for topology-discovery.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of replicas of the deployment.
replicaCount: 1

image:
  # -- topology-discovery image repository
  repository: frinx/topology-discovery
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""
  # -- Image pull policy
  pullPolicy: IfNotPresent

# -- [Image Pull Secrets](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/)
imagePullSecrets: []

# -- String to partially override app name
nameOverride: ""

# -- String to partially override app name
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Pod annotations
podAnnotations: {}

# -- Configure [Pods Security Context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
podSecurityContext: {}
  # fsGroup: 2000

# -- Security context
securityContext:
  capabilities:
    drop:
    - ALL

service:
  # -- Service type
  type: ClusterIP
  # -- Service port
  port: 5000
  # -- Kafka Consumer API service port
  kafkaClientPort: 5005

# Configure the [Ingress resource](https://kubernetes.io/docs/concepts/services-networking/ingress/)
ingress:
  # -- Enable ingress
  enabled: false
  # -- IngressClass that will be be used to implement the Ingress
  className: ""
  # -- Additional labels for the Ingress resource
  labels: {}
  # -- Additional annotations for the Ingress resource
  annotations: {}
  # -- [Ingress Host](https://kubernetes.io/docs/concepts/services-networking/ingress/#the-ingress-resource)
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- [Container resources](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/)
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- [Container resources](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/)
kafkaClientResources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- [Autoscaling parameters](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- [Node labels for pod assignment](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/)
nodeSelector: {}

# -- [Tolerations for pod assignment](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
tolerations: []

# -- [Affinity for pod assignment](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
affinity: {}

deployment:
# -- Deployment annotations
  annotations: {}

dbPersistence:
  # -- ArangoDB URL
  ARANGO_URL: 'http://arangodb:8529'
  # -- Existing database credentials
  existingSecret:
    secretName:
    arangoUsernameKey:
    arangoRootPasswordKey:
  # -- Database credentials. Exposed when existing dbPersistence.existingSecret.secretName is empty
  ARANGO_USERNAME: 'root'
  ARANGO_ROOT_PASSWORD: 'frinx'

# -- Application environment variables
env:
  CONDUCTOR_URL: 'http://conductor-server:8080'
  TD_UNICONFIG__URL_BASE: http://uniconfig:8181/rests/
  TD_BGPLS__ENABLED: false
  TD_BGPLS__NETWORK: 172.18.0.0/16
  TD_BGPLS__ROUTER_ID: 192.168.99.1
  TD_BGPLS__NEIGHBOR_IP: 192.168.99.100
  TD_BGPLS__LOCAL_AS: 100
  TD_BGPLS__PEER_AS: 100
  TD_SYNC__APPEND_PROTOCOL_TO_DEVICE_NAMES: true
  ADMIN: admin
  EDITOR: editor
  VIEWER: viewer
  IMPORT_ARANGO_DEMO_DATA: false
  IMPORT_DEVICE_INVENTORY_DATA: false
  X_TENANT_ID: "frinx"
  TD_KAFKA__TOPICS__DEVICE_INVENTORY_TOPIC: device-inventory
  TD_KAFKA__BOOTSTRAP_SERVERS: '["kafka:9092"]'
  TD_KAFKA__API_VERSION: '["0", "11", "5"]'

utilitiesImage:
  # -- utilities image repository
  repository: frinx/utilities-alpine
  # -- Overrides the image tag.
  tag: "1.2"
  # -- Image pull policy
  pullPolicy: IfNotPresent
